package hello;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;

import org.springframework.web.bind.annotation.RequestMapping;




@Controller // This means that this class is a Controller
public class MainController   {
	private String appMode;
	
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@RequestMapping("/user")
	public String showUserForm(User user, Model model) {
		model.addAttribute("mode", appMode);

		return "userform";
	}
	@RequestMapping(path = "/add") // Map ONLY POST Requests
	public String addNewUser(@Valid User user, BindingResult bindingResult) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		
		if (bindingResult.hasErrors()) {
			return "userform";
		}
		userRepository.save(user);
		return "greeting";

	}
	
	@RequestMapping(path = "/update") // Map ONLY POST Requests
	public String updateUser(@Valid User user, BindingResult bindingResult) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		
		if (bindingResult.hasErrors()) {
			return "edituser";
		}
		//userRepository.deleteById(user.getId());
		
		userRepository.save(user);
		return "greeting";

	}
	
	@RequestMapping(path = "/delete/{id}") // Map ONLY POST Requests
	public String deleteUser(User user) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		userRepository.deleteById(user.getId());
		return "greeting";

	}
	
	@RequestMapping(path = "/edit/{id}") // Map ONLY POST Requests
	public String editUser(@Valid User user, BindingResult bindingResult) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
			
		return "edituser";

	}

	@RequestMapping(path = "/list")
	public String servicesList(Model model) {
		
		model.addAttribute("userList", userRepository.findAll());
		return "list";
	}
}
